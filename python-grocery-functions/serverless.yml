# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: python-mpn-functions # NOTE: update this with your service name

provider:
  name: aws
  runtime: python3.8
  region: eu-central-1
  stage: ${self:custom.vars.stage, "dev"}
  logRetentionInDays: ${self:custom.vars.logRetentionInDays, 1}
  profile: serverless-mpn-admin

  memorySize: 1024
  timeout: 60

  environment:
    MONGO_HOST: ${env:MONGO_HOST}
    MONGO_PORT: ${env:MONGO_PORT}
    MONGO_DATABASE: ${env:MONGO_DATABASE}
    MONGO_USER: ${env:MONGO_USER}
    MONGO_PASSWORD: ${env:MONGO_PASSWORD}
    STAGE: ${self:provider.stage}
    SCRAPER_FEED_BUCKET: !Ref ScraperFeedBucket
    SCRAPER_FEED_HANDLED_TOPIC_ARN: !Ref ScraperFeedHandledTopic

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:GetObject"
      Resource: !Sub
        - "arn:aws:s3:::#{BucketName}/*"
        - BucketName:
            Ref: ScraperFeedBucket
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource: !Ref ScraperFeedHandledTopic

package:
  include:
    - scraper_feed_handler.py
    - product_feed_handler.py
    - scraper_feed/**
    - storage/**
    - util/**
    - parsing/**
    - config/**
    - amp_types/**
  exclude:
    - ./**

functions:
  scraperFeedSns:
    handler: scraper_feed_handler.scraper_feed_sns
    events:
      - sns:
          topicName: ScraperFeedCreated
          arn:
            Ref: ScraperFeedCreatedTopic
  productFeedSns:
    handler: product_feed_handler.handle_products_sns
    events:
      - sns:
          topicName: ScraperFeedHandled
          arn:
            Ref: ScraperFeedHandledTopic
  scraperFeedTrigger:
    handler: scraper_feed_handler.trigger_scraper_feed

resources:
  - ${file(../s3-sns-cloudformation.yml)}

plugins:
  - serverless-python-requirements
  - serverless-cloudformation-sub-variables

custom:
  vars: ${file(./sls-config.js)}
  pythonRequirements:
    # dockerizePip: true # Had some problem with C libs in python if using no-linux
    slim: true # Omits tests, __pycache__, *.pyc etc from dependencies
    # Caching pip
    useDownloadCache: true
    useStaticCache: true
    fileName: requirements.txt
